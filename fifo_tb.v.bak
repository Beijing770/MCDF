module fifo_tb ;
    parameter FIFO_DEPTH = 4'b1000;    //depth is 8
    parameter FIFO_WIDE = 6'b10_0000;    //data wide is 32
    parameter PTR_WIDE = 1'd3;
    parameter MAX_CNT = 3'b111;    //d7 input clk;//d7 input clk;

    reg clk;
    reg rst_n;
    reg wr_en;
    reg rd_en;
    reg [FIFO_WIDE-1 : 0] data_in;
    reg [FIFO_WIDE-1 : 0] data_out;
    reg full;
    reg empty;
    reg [PTR_WIDE-1 : 0] fifo_slack;

    fifo_top #( 
        .FIFO_DEPTH(FIFO_DEPTH),
        .FIFO_WIDE(FIFO_WIDE),
        .PTR_WIDE(PTR_WIDE),
        .MAX_CNT(MAX_CNT))
    fifo_top_test (
        .clk(clk),
        .rst_n(rst_n),
        .wr_en(wr_en),
        .rd_en(rd_en),
        .data_in(data_in),
        .data_out(data_out),
        .full(full),
        .empty(empty),
        .fifo_slack(fifo_slack));

    

    initial clk = 0;
    always #5 clk = ~clk;
    
    initial data_in = 0; 
    always @ (posedge clk) data_in <= data_in + 1;

    initial  begin 
        rst_n = 0;
        wr_en = 0;
        rd_en = 0;
    end // initial

    always @(posedge clk) begin
      {rst_n,wr_en,rd_en}  =  {rst_n,wr_en,rd_en} + 1;
    end

endmodule

    

